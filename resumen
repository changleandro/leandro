Git has three main states that
your files can reside in: committed, modified, and staged. Committed means
that the data is safely stored in your local database. Modified means that you
have changed the file but have not committed it to your database yet. Staged
means that you have marked a modified file in its current version to go into
your next commit snapshot.
This leads us to the three main sections of a Git project: the Git directory, the
working directory, and the staging area.

The Git directory is where Git stores the metadata and object database for
your project. This is the most important part of Git, and it is what is copied
when you clone a repository from another computer.
The working directory is a single checkout of one version of the project.
These files are pulled out of the compressed database in the Git directory and
placed on disk for you to use or modify.
The staging area is a file, generally contained in your Git directory, that
stores information about what will go into your next commit. It’s sometimes re-
ferred to as the “index”, but it’s also common to refer to it as the staging area.

If a particular version of a file is in the Git directory, it’s considered commit-
ted. If it has been modified and was added to the staging area, it is staged. And
if it was changed since it was checked out but has not been staged, it is modi-
fied.

Remember that each file in your working directory can be in one of two
states: tracked or untracked. Tracked files are files that were in the last snap-
shot; they can be unmodified, modified, or staged. Untracked files are every-
thing else – any files in your working directory that were not in your last snap-
shot and are not in your staging area. When you first clone a repository, all of
your files will be tracked and unmodified because Git just checked them out
and you haven’t edited anything.


